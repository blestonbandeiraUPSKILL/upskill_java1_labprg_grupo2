@startuml
title UC03 - Definir Categoria de Tarefa

actor Administrativo
activate Administrativo

Administrativo -> ":UI" : 1: Inicia definição de nova categoria de tarefa
activate ":UI"

":UI" -> ":CTRL" : 1.1: Ia = getListaAreasAtividade()
activate ":CTRL"

":CTRL" -> ":Plataforma" : 1.1.1: ra = getRegistoAreasAtividade()
activate ":Plataforma"
deactivate ":Plataforma"

":CTRL" -> "ra:RegistoAreasAtividade" : 1.1.2: Ia = getListaAreasAtividade()
activate "ra:RegistoAreasAtividade"
deactivate "ra:RegistoAreasAtividade"
deactivate ":CTRL"

":UI" --> Administrativo: 1.2: Mostra a lista de áreas de atividade e solicita a descrição de categoria de tarefa e a escolha de uma área de atividade
deactivate ":UI"

Administrativo -> ":UI" : 2: Introduz a descrição e seleciona a área de atividade pretendida
activate ":UI"

":UI" -> ":CTRL" : 2.1: Ic = novaAreaAtividade(descricao, codAreaAtividade)
activate ":CTRL"

":CTRL" -> "ra:RegistoAreasAtividade" : 2.1.1: at = getAreaAtividade(codAreaAtividade)
activate "ra:RegistoAreasAtividade"
deactivate "ra:RegistoAreasAtividade"

":CTRL" -> ":Plataforma" : 2.1.2: rct = getRegistoCompetenciasTecnicas(codAreaAtividade)
activate ":Plataforma"
deactivate ":Plataforma"

":UI" --> Administrativo: 2.2: Mostra a lista de competências técnicas associadas à área de atividade especificada e solicita a escolha de uma delas
deactivate ":UI"

":CTRL" -> "rct:RegistoCompetenciasTecnicas" : 2.1.3: at = getListaCompetecnciasTecnicas(at)
activate "rct:RegistoCompetenciasTecnicas"
deactivate "rct:RegistoCompetenciasTecnicas"

":CTRL" -> ":Plataforma" : 2.1.4: rc = getRegistoCategorias()
activate ":Plataforma"
deactivate ":Plataforma"

":CTRL" -> "rc:RegistoCategorias" : 2.1.5: c = novaCategoria(descricao, at)
activate "rc:RegistoCategorias"
deactivate ":CTRL"

"rc:RegistoCategorias" -> "rc:RegistoCategorias" : 2.1.5.1: idCategoria = getIdCategoria()

"rc:RegistoCategorias" --> "c:Categoria" : 2.1.5.2: create(idCategoria, descricao, at)
deactivate "rc:RegistoCategorias"

group sd loop

Administrativo -> ":UI" : 3: Seleciona Competência Técnica
activate ":UI"

":UI" -> ":CTRL" : 3.1: Ig = getGrausProficiencia(codCompetencia)
activate ":CTRL"

":CTRL" -> "rct:RegistoCompetenciasTecnicas" : 3.1.1: rc = getCompetenciaTecnica(codCompetencia)
activate "rct:RegistoCompetenciasTecnicas"
deactivate "rct:RegistoCompetenciasTecnicas"

":CTRL" -> "ct:CompetenciaTecnica" : 3.1.2: Ig = getGrausProficiencia(ct)
activate "ct:CompetenciaTecnica"
deactivate "ct:CompetenciaTecnica"
deactivate ":CTRL"

":UI" --> Administrativo: 3.2: Mostra graus de proficiência relativos à competência técnica selecionada
deactivate ":UI"

Administrativo -> ":UI" : 4: Seleciona grau de proficiência mínimo e obrigatoriedade da competência técnica
activate ":UI"

":UI" -> ":CTRL" : 4.1: setProficienciaObrigatoriedade(codGrau, obrigatoria)
activate ":CTRL"

":CTRL" -> "ct:CompetenciaTecnica" : 4.1.1: gp = getGrauProficiencia(codGrau)
activate "ct:CompetenciaTecnica"
deactivate "ct:CompetenciaTecnica"

":UI" --> Administrativo: 4.2: Apresenta dados e solicita confirmação
deactivate ":UI"

":CTRL" -> "c:Categoria" : 4.1.2: novaCaracterizacao(ct, gp, obrigatoria)
activate "c:Categoria" 
deactivate ":CTRL"

"c:Categoria" --> "cct:CaracterizacaoCT" : 4.1.2.1: create(ct, gt, obrigatoria)

"c:Categoria" -> "c:Categoria" : 4.1.2.2: addCaracterizacaoCT(cct)

deactivate "c:Categoria" 

end 

Administrativo -> ":UI" : 5: Confirma
activate ":UI"

":UI" -> ":CTRL" : 5.1: registaCategoria()
activate ":CTRL"

":CTRL" -> "rc:RegistoCategorias" : 5.1.1: registaCategoria(c)
activate "rc:RegistoCategorias"
deactivate ":CTRL"

":UI" -> Administrativo: 5.2: Informa operação bem sucedida
deactivate ":UI"

"rc:RegistoCategorias"-> "rc:RegistoCategorias" : 5.1.1.1: valida(c)
"rc:RegistoCategorias"-> "rc:RegistoCategorias" : 5.1.1.2: addCategoria(c)
deactivate "rc:RegistoCategorias"

deactivate Administrativo
@enduml
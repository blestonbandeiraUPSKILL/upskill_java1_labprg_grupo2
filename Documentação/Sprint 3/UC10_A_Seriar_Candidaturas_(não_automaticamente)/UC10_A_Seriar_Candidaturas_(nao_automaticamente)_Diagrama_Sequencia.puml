@startuml

title UC10-A - Seriar Candidaturas de Anúncio (não automaticamente)

participant Colaborador
participant SeriarCandidaturasUI
participant SeriarCandidaturasCtrl
participant RepoAnuncio as RepositorioAnuncio
participant RepoCand as RepositorioCandidatura
participant RepoClas as RepositorioClassificacao
participant RepoCol as RepositorioColaborador
participant RepoSer as RepositorioSeriacao
participant RepoColSer as RepositorioColaboradorSeriacao



activate Colaborador
Colaborador -> SeriarCandidaturasUI: Consulta anúncios em \nperiodo de seriação
activate SeriarCandidaturasUI
SeriarCandidaturasUI -> SeriarCandidaturasCtrl: listaAnunciosASeriar\n(emailColaborador, \nnifOrganizacao)
activate SeriarCandidaturasCtrl
SeriarCandidaturasCtrl -> RepositorioAnuncio: listaAnunciosASeriar\n(emailColaborador, \nnifOrganizacao)
activate RepositorioAnuncio
alt Não existem anúncios a seriar 
RepositorioAnuncio --> SeriarCandidaturasCtrl: listaAnunciosASeriar\n(emailColaborador, \nnifOrganizacao)
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: listaAnunciosASeriar\n(emailColaborador, \nnifOrganizacao) = null
SeriarCandidaturasUI --> Colaborador: Não existem anúncios \ndisponiveis

else Existem anúncios a seriar  
RepositorioAnuncio --> SeriarCandidaturasCtrl: listaAnunciosASeriar\n(emailColaborador, \nnifOrganizacao)
deactivate RepositorioAnuncio
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: listaAnunciosASeriar\n(emailColaborador, \nnifOrganizacao)
deactivate SeriarCandidaturasCtrl
SeriarCandidaturasUI --> Colaborador: Mostra a lista dos Anúncios a \nseriar 
deactivate SeriarCandidaturasUI

== Seriação Manual ==

Colaborador -> SeriarCandidaturasUI: Seleciona um anúncio de regimento \nManual a seriar 
activate SeriarCandidaturasUI
SeriarCandidaturasUI -> SeriarCandidaturasCtrl: getAllByIdAnuncio(idAnuncio)
activate SeriarCandidaturasCtrl
SeriarCandidaturasCtrl -> RepositorioCandidatura: getAllByIdAnuncio(idAnuncio)
activate RepositorioCandidatura

alt Não existem candidaturas ao anúncio selecionado
RepositorioCandidatura --> SeriarCandidaturasCtrl: candidaturas(idAnuncio) = null
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: candidaturas(idAnuncio) = null
SeriarCandidaturasUI --> Colaborador: Não existem candidaturas disponíveis


else Existem candidaturas ao anúncio selecionado
RepositorioCandidatura --> SeriarCandidaturasCtrl: candidaturas(idAnuncio)
deactivate RepositorioCandidatura
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: candidaturas(idAnuncio)
deactivate SeriarCandidaturasCtrl
SeriarCandidaturasUI --> Colaborador: Mostra a lista de candidaturas \nao anúncio e solicita confirmar \ninicio do processo de seriação
deactivate SeriarCandidaturasUI


Colaborador -> SeriarCandidaturasUI: Confirma o início do processo \nde seriação
activate SeriarCandidaturasUI
SeriarCandidaturasUI -> SeriarCandidaturasCtrl: saveSeriacao(idAnuncio)
activate SeriarCandidaturasCtrl
SeriarCandidaturasCtrl -> RepositorioSeriacao: saveSeriacao(idAnuncio)
activate RepositorioSeriacao
RepositorioSeriacao -> RepositorioSeriacao: save(idAnuncio)
RepositorioSeriacao --> SeriarCandidaturasCtrl: Seriação do anúncio criada com sucesso
deactivate RepositorioSeriacao
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: Seriação do anúncio criada \ncom sucesso

SeriarCandidaturasUI -> SeriarCandidaturasCtrl: getIdSeriacao(idAnuncio)
SeriarCandidaturasCtrl -> RepositorioSeriacao: getIdSeriacao(idAnuncio)
activate RepositorioSeriacao
RepositorioSeriacao -> RepositorioSeriacao: getProcessoSeriacao\nByAnuncio(idAnuncio).\ngetIdSeriacao()
RepositorioSeriacao --> SeriarCandidaturasCtrl: idSeriacao
deactivate RepositorioSeriacao
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: idSeriacao
deactivate SeriarCandidaturasCtrl
SeriarCandidaturasUI --> Colaborador: Indica o início do processo de seriação \ne solicita a atribuição da classificação \na cada candidatura recebida.
deactivate SeriarCandidaturasUI

loop
Colaborador -> SeriarCandidaturasUI: Atribui uma classificação a uma \ndada candidatura
activate SeriarCandidaturasUI
SeriarCandidaturasUI -> SeriarCandidaturasCtrl: saveClassificacao\n(posicao, idSeriacao, \nidCandidatura)
activate SeriarCandidaturasCtrl
SeriarCandidaturasCtrl -> RepositorioClassificacao: saveClassificacao\n(posicao, idSeriacao, \nidCandidatura)
activate RepositorioClassificacao
RepositorioClassificacao -> RepositorioClassificacao: save(posicao, \nidSeriacao, \nidCandidatura)
end loop
RepositorioClassificacao --> SeriarCandidaturasCtrl: Classificação salva com sucesso
deactivate RepositorioClassificacao
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: Classificação salva com sucesso
deactivate SeriarCandidaturasCtrl
SeriarCandidaturasUI --> Colaborador: Mostra a lista seriada \nde candidatura e informa \no sucesso da operação.
deactivate SeriarCandidaturasUI

== Seleção de Colaboradores Participantes ==

Colaborador -> SeriarCandidaturasUI: Seleciona um anúncio de regimento \nManual a seriar 
activate SeriarCandidaturasUI
SeriarCandidaturasUI -> SeriarCandidaturasCtrl: getAll(nifOrganizacao)
activate SeriarCandidaturasCtrl
SeriarCandidaturasCtrl -> RepositorioColaborador: getAll(nifOrganizacao)
activate RepositorioColaborador

alt Não existem colaboradores participantes adicionais
RepositorioColaborador --> SeriarCandidaturasCtrl: colaboradores(nifOrganizacao) = null
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: colaboradores(nifOrganizacao) = null
SeriarCandidaturasUI --> Colaborador: Indica que não há \ncolaboradores disponiveis

else Existem colaboradores participantes adicionais
RepositorioColaborador --> SeriarCandidaturasCtrl: colaboradores(nifOrganizacao)
deactivate RepositorioColaborador
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: colaboradores(nifOrganizacao) 
deactivate SeriarCandidaturasCtrl
SeriarCandidaturasUI --> Colaborador: Mostra a lista de \ncolaboradores disponiveis
deactivate SeriarCandidaturasUI

loop
Colaborador -> SeriarCandidaturasUI: Seleciona o colaborador adicional \nparticipante na Seriação
activate SeriarCandidaturasUI
SeriarCandidaturasUI -> SeriarCandidaturasCtrl: update\n(emailColaboradorAdicional, \nidSeriacao)
activate SeriarCandidaturasCtrl
SeriarCandidaturasCtrl -> RepositorioColaboradorSeriacao: update\n(emailColaboradorAdicional, \nidSeriacao)
activate RepositorioColaboradorSeriacao
RepositorioColaboradorSeriacao -> RepositorioColaboradorSeriacao: update\n(emailColaboradorAdicional, \nidSeriacao)
end loop 

RepositorioColaboradorSeriacao --> SeriarCandidaturasCtrl: Adição de colaboradores participantes concluída com sucesso.
deactivate RepositorioColaboradorSeriacao
SeriarCandidaturasCtrl --> SeriarCandidaturasUI: Adição de colaboradores \nparticipantes concluída \ncom sucesso.
deactivate SeriarCandidaturasCtrl
SeriarCandidaturasUI --> Colaborador: Informa o sucesso da operação
deactivate SeriarCandidaturasUI

end alt 
end alt
end alt
deactivate Colaborador
@enduml